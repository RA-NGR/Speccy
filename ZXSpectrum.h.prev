#pragma once
#include "Settings.h"
#include "Display.h"

class ZXSpectrum
{
	const uint16_t m_colorLookup[16] = { 0x0000, 0x1700, 0x00B8, 0x17B8, 0xE005, 0xF705, 0xE0BD, 0xF7BD,
										 0x0000, 0x1F00, 0x00F8, 0x1FF8, 0xE007, 0xFF07, 0xE0FF, 0xFFFF };
	struct BorderColors
	{
		uint16_t x;
		uint8_t y;
		uint16_t color;
	} m_borderColors[BORDER_BUFFER_SIZE];
	uint8_t m_pbWIndex = 0;
	uint8_t m_pbRIndex = 0;
	uint16_t m_borderColor = m_colorLookup[7];
//	uint8_t m_frameCounter = 0;
	uint8_t* m_pZXMemory;
	uint16_t* m_pScreenBuffer[2];
	uint8_t* m_pContendTable;
	bool m_initComplete = false;
	int16_t m_scanLine = -1;
	uint32_t m_emulationTime = 0;

	Display* m_pDisplayInstance;
public:
	ZXSpectrum() {};
	~ZXSpectrum();
	uint8_t m_frameCounter = 0;
	bool init(Display* pDisplayInstance);
	void drawLine(int posY);
private:
};

